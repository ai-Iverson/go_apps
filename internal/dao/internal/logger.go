// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// LoggerDao is the data access object for table logger.
type LoggerDao struct {
	table   string        // table is the underlying table name of the DAO.
	group   string        // group is the database configuration group name of current DAO.
	columns LoggerColumns // columns contains all the column names of Table for convenient usage.
}

// LoggerColumns defines and stores column names for table logger.
type LoggerColumns struct {
	CreatedAt         string //
	UpdatedAt         string //
	IsDeleted         string //
	VersionId         string // 版本 ID
	OperationDesc     string // 操作描述
	OperationUser     string // 操作用户
	OperationUserName string // 操作用户名
	RemoteIp          string // 操作 IP
	Content           string // 日志内容
	Id                string //
}

//  loggerColumns holds the columns for table logger.
var loggerColumns = LoggerColumns{
	CreatedAt:         "created_at",
	UpdatedAt:         "updated_at",
	IsDeleted:         "is_deleted",
	VersionId:         "version_id",
	OperationDesc:     "operation_desc",
	OperationUser:     "operation_user",
	OperationUserName: "operation_user_name",
	RemoteIp:          "remote_ip",
	Content:           "content",
	Id:                "id",
}

// NewLoggerDao creates and returns a new DAO object for table data access.
func NewLoggerDao() *LoggerDao {
	return &LoggerDao{
		group:   "default",
		table:   "logger",
		columns: loggerColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *LoggerDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *LoggerDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *LoggerDao) Columns() LoggerColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *LoggerDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *LoggerDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *LoggerDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
