// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// VersionDao is the data access object for table version.
type VersionDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns VersionColumns // columns contains all the column names of Table for convenient usage.
}

// VersionColumns defines and stores column names for table version.
type VersionColumns struct {
	CreatedAt   string //
	UpdatedAt   string //
	IsDeleted   string //
	Tag         string // 应用标签
	AppId       string // 应用 ID
	Status      string // 应用状态
	Source      string // 应用来源
	UserId      string // 用户 ID
	UserName    string // 用户名
	Version     string // 应用版本
	Instruction string // 应用使用说明
	ReleaseNote string // 应用更新说明
	ApproveDesc string // 审批意见
	Id          string //
}

//  versionColumns holds the columns for table version.
var versionColumns = VersionColumns{
	CreatedAt:   "created_at",
	UpdatedAt:   "updated_at",
	IsDeleted:   "is_deleted",
	Tag:         "tag",
	AppId:       "app_id",
	Status:      "status",
	Source:      "source",
	UserId:      "user_id",
	UserName:    "user_name",
	Version:     "version",
	Instruction: "instruction",
	ReleaseNote: "release_note",
	ApproveDesc: "approve_desc",
	Id:          "id",
}

// NewVersionDao creates and returns a new DAO object for table data access.
func NewVersionDao() *VersionDao {
	return &VersionDao{
		group:   "default",
		table:   "version",
		columns: versionColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *VersionDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *VersionDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *VersionDao) Columns() VersionColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *VersionDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *VersionDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *VersionDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
