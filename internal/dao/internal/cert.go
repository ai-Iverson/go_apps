// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// CertDao is the data access object for table cert.
type CertDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns CertColumns // columns contains all the column names of Table for convenient usage.
}

// CertColumns defines and stores column names for table cert.
type CertColumns struct {
	CreatedAt string //
	UpdatedAt string //
	IsDeleted string //
	Number    string // 证书 ID
	DevId     string // 开发者 ID
	DevOrg    string // 开发者组织
	CertPass  string // 证书密码
	BeginTime string // 颁发时间
	EndTime   string // 过期时间
	Content   string // 证书内容
	Id        string //
}

//  certColumns holds the columns for table cert.
var certColumns = CertColumns{
	CreatedAt: "created_at",
	UpdatedAt: "updated_at",
	IsDeleted: "is_deleted",
	Number:    "number",
	DevId:     "dev_id",
	DevOrg:    "dev_org",
	CertPass:  "cert_pass",
	BeginTime: "begin_time",
	EndTime:   "end_time",
	Content:   "content",
	Id:        "id",
}

// NewCertDao creates and returns a new DAO object for table data access.
func NewCertDao() *CertDao {
	return &CertDao{
		group:   "default",
		table:   "cert",
		columns: certColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CertDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *CertDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *CertDao) Columns() CertColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *CertDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CertDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CertDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
